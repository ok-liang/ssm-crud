<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd">

    <!--配置创建容器时，要扫描的包。不扫描控制器-->
    <context:component-scan base-package="com.atguigu.crud">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!--Spring的配置文件，这里主要配置和业务逻辑有关的配置.
        Spring配置的核心点：数据源、与mybatis的整合、事务控制-->
    <!--===========================数据源=================================================-->
    <context:property-placeholder location="classpath:dbconfig.properties"/>
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!--==========================配置和Mybatis的整合==============================================-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--指定mybatis全局配置文件的位置-->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <property name="dataSource" ref="dataSource"></property>
        <!--指定mapper映射文件的位置-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
    </bean>

    <!--配置扫描器，将mybatis接口的实现加入到ioc容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--扫描所有的dao接口的实现类，加入到ioc容器中-->
        <property name="basePackage" value="com.atguigu.crud.dao"></property>
    </bean>
    <!--配置一个可以执行批量的sqlSession对象-->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactory"></constructor-arg>
        <constructor-arg name="executorType" value="BATCH"></constructor-arg>
    </bean>


    <!--============================事务控制的配置===================================================-->
    <!--事务管理器组件-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 控制住数据源-->
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--事务的增强。//切入到切入点之后，要做的操作。//事务的增强属性的配置//transaction-manager表示使用哪个事务管理器进行控制-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!--事务的属性-->
        <tx:attributes>
            <!--以get开始的所有方法-->
            <tx:method name="get*" read-only="true"/>
            <!-- 所有方法都是事务方法-->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>
    <!--开启aop事务，使用xml配置形式的事务-->
    <aop:config>
        <!--配置切入点表达式。//要给哪些方法进行增强-->
        <aop:pointcut id="txPoint" expression="execution(* com.atguigu.crud.service.*.*(..))"/>
        <!--建立切入点 和 事务增强的连接-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
    </aop:config>
</beans>